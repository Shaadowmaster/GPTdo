#!/bin/bash

function check_api_key() {
    if [[ -z "$OPENAI_API_KEY" ]]; then
        echo "OpenAI API key not found."
        echo -n "Please enter your OpenAI API key: "
        read OPENAI_API_KEY
        export OPENAI_API_KEY
    fi
}

function check_plain_text() {
    if [[ -z "$1" ]]; then
        echo "Usage: $0 <plain_text_string>"
        exit 1
    fi
}

function send_api_request() {
    local plain_text="$1"
    local json_payload=$(jq -n \
                            --arg prompt "Translate this plain text string into bash commands that can be run with eval: \"$plain_text\"" \
                            '{prompt: $prompt, max_tokens: 100, n: 1, stop: null, temperature: 0.5}')
    echo $(curl -s -X POST "https://api.openai.com/v1/engines/text-davinci-002/completions" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $OPENAI_API_KEY" \
        -d "$json_payload")
}

function parse_response() {
    local response="$1"
    echo $(echo "$response" | jq -r '.choices[0].text' | sed 's/\\n/\n/g' | awk 'NF')
}

check_api_key
check_plain_text "$1"

response=$(send_api_request "$1")
translated_command=$(parse_response "$response")

echo "Translated command:"
echo "$translated_command"

if [[ -z "$translated_command" ]]; then
    echo "Full API response:"
    echo "$response"
fi

echo -n "Do you want to run this command? (y/n/debug): "
read user_input

# Run the commands one by one if the user says "y"
if [[ "$user_input" == "y" ]]; then
    IFS=$'\n'
    for cmd in $translated_command; do
        echo "Running: $cmd"
        eval "$cmd"
    done
elif [[ "$user_input" == "debug" ]]; then
    echo "Full API response:"
    echo "$response"
else
    echo "Command not executed."
fi
